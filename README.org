#+TITLE: Magik - A simple python utility to open links
#+AUTHOR: pace577

Magik lets you quickly open links using a simple command. This is primarily for all those students who struggle to open and manage links to lectures/course material on a regular basis, however anyone's free to modify and use it!

* Dependencies
All you need is a working python setup! And maybe an office utility like [[https://www.libreoffice.org/discover/calc/][Libreoffice Calc]] to edit csv files, to maintain sanity.


* How it works
Magik reads a CSV file that contains links corresponding to the subject name, and opens the link with a given browser. The ~vars.py~ file contains information about the column headings and rows, which can be customized according to your needs.


* How to use it
** Creating and editing the CSV file
First create a CSV file with the following command
#+begin_src bash
./magik.py init
#+end_src

You can edit and add links to the CSV file using an office tool like MS Excel or Libreoffice Calc.

Alternatively, you can use the ~set~ command. For example, if you want to set the link to subject ~math~ and link type ~lecture~ as https://youtube.com, then use the following command.
#+begin_src bash
./magik.py set math lecture https://youtube.com
#+end_src

** Opening links
When the CSV file is ready, you can use ~magik~ to open a link immediately. Consider the ~test.csv~ file for example. It has the following contents:
#+begin_src csv
subject,live_lectures,recorded_lectures,assignments
ps,https://archlinux.org,https://duckduckgo.com,https://wikipedia.org
cv,https://duckduckgo.com,https://wikipedia.org,https://archlinux.org
#+end_src

To open the link corresponding to ~ps~ and ~live_lectures~, use the following command while in the project directory:
#+begin_src bash
./magik.py open ps live_lectures
#+end_src

You can use short commands to do the same thing, which can be customized in the ~vars.py~ file.
#+begin_src bash
./magik.py o ps live
#+end_src
The default value for the last argument is ~live_lectures~ (in particular, it is the heading of the leftmost column containing links), so it can be skipped if desired.


* Customizing
You can customize a lot of variables in the ~vars.py~ file to suit your needs.

| Variable Name              | Description                                                                                                                            |
|----------------------------+----------------------------------------------------------------------------------------------------------------------------------------|
| BROWSER                    | THe browser used to open links. Make sure this is the **same** as the browsers commandline utility                                       |
| FILE                       | The CSV file read by the program. Contains all the links                                                                               |
| SUBJECT                    | The CSV file heading for the subject column. Must be the same as in the CSV file.                                                      |
| LIVE                       | The CSV file heading for the live_lectures column. Must be the same as in the CSV file.                                                |
| RECORDED                   | The CSV file heading for the live_lectures column. Must be the same as in the CSV file.                                                |
| ASSIGNMENTS                | The CSV file heading for the live_lectures column. Must be the same as in the CSV file.                                                |
| SUBJECT_LIST               | List of subjects(rows) under the 'subject' column. Must be the same as in the CSV file.                                                |
| SUBJECT_ARGS_LIST          | List of lists containing arguments that map to an item in SUBJECT_LIST. Customize this to use short arguments when running commands.   |
| LINK_TYPE_LIST             | List of link types (column headings) in the CSV file. Must be the same as in the CSV file.                                             |
| LINK_TYPE_ARGS_LIST        | List of lists containing arguments that map to an item in LINK_TYPE_LIST. Customize this to use short arguments when running commands. |

Also, consider placing a symlink for magik.py somewhere in your PATH, so you can execute it from anywhere.
